<?php
/**
As a developer, I want a regression test to prove that the fields and diseases pages of iWheat.org are not affected by a change.
*/

class DiseaseAnonymous extends FirstRemoteTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Disease_Anonymous',
      'description' => 'Tests diseases when not logged in',
      'group' => 'iWheat',
    );
  }

  function setUp()
  {
    parent::setUp(array('node'));
  }
  function testDiseases()
  {
    module_enable(array('contact'));
    $this->resetAll();

    $this->drupalGet('/toolshed/selector');
    $this->DiseaseMenus();
    $this->drupalGet('/toolshed/selector/diseases');
    $this->DiseaseMenus2();
    $this->DiseaseListCheck();
  }
  function DiseaseMenus()
  {
    //checks for variety support system at the top
    $this->assertFieldByXPath('//ul[@class="menu links inline"]//li[@class="expanded active-trail active menu-mlid-1120"]//a[@href="/toolshed/selector"]', "Variety Support System", 'Variety Support System found.');

    //checks for Diseases link below variety support system
    $this->assertFieldByXPath('//ul[@class="tabs primary clearfix"]//a[@href="/toolshed/selector/diseases"]', 'Diseases', 'Diseases found.');
  }
  function DiseaseMenus2()
  {
    //checks for variety support system at the top
    $this->assertFieldByXPath('//ul[@class="menu links inline"]//a[@href="/toolshed/selector"]', "Variety Support System", 'Variety Support System found.');

    //checks for Diseases link below variety support system
    $this->assertFieldByXPath('//ul[@class="tabs primary clearfix"]//li[@class="active"]//a[@href="/toolshed/selector/diseases"]', 'Diseases', 'Diseases found.');
  }
  function DiseaseListCheck()
  {
    //checks for Barley yellow dwarf
    $this->assertFieldByXPath('//tr[@class="odd views-row-first"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/barley-yellow-dwarf"]', "Barley yellow dwarf", 'Barley yellow dwarf found.');

    //checks for Barley yellow dwarf virus 
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/barley-yellow-dwarf-virus-bydv"]', "Barley yellow dwarf virus (BYDV)", 'Barley yellow dwarf virus (BYDV) found.');

    //checks for common bunt/stinking smut
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/common-buntstinking-smut"]', "Common Bunt/Stinking Smut", 'Common Bunt/Stinking Smut found.');

    //checks for common foot rot
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/common-root-rot"]', "Common root rot", 'Common root rot found.');

    //checks for dryland foot rot
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/dryland-foot-rot"]', "Dryland foot rot", 'Dryland foot rot found.');

    //checks for glume blotch
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/glume-blotch"]', "Glume blotch", 'Glume blotch found.');

    //checks for head scab
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/head-scab"]', "Head scab", 'Head scab found.');

    //checks for leaf rust
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/leaf-rust"]', "Leaf rust ", 'Leaf rust found.');

    //checks for loose smut
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/loose-smut"]', "Loose Smut", 'Loose Smut found.');

    //checks for powdery mildew
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/powdery-mildew"]', "Powdery mildew", 'Powdery mildew found.');

    //checks for septoria
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/septoria"]', "Septoria", 'Septoria found.');

    //checks for septoria-tritici-blotch
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/septoria-tritici-blotch"]', "Septoria tritici blotch", 'Septoria tritici blotch found.');

    //checks for soil-borne mosaic
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/soil-borne-mosaic"]', "Soil-borne mosaic", 'Soil-borne mosaic found.');

    //checks for Soil-borne mosaic virus
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/soil-borne-mosaic-virus"]', "Soil-borne mosaic virus", 'Soil-borne mosaic virus found.');

    //checks for speckled-leaf blotch
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/speckled-leaf-blotch"]', "Speckled leaf blotch", 'Speckled leaf blotch found.');

    //checks for Spindle streak mosaic
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/spindle-streak-mosaic"]', "Spindle streak mosaic", 'Spindle streak mosaic found.');

    //checks for Spindle streak mosaic virus
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/spindle-streak-mosaic-virus"]', "Spindle streak mosaic virus", 'Spindle streak mosaic virus found.');

    //checks for Stem rust
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/stem-rust"]', "Stem rust", 'Stem rust found');

    //checks for stripe rust
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/stripe-rust"]', "Stripe rust", 'Stripe rust found');

    //checks for take-all
    $this->assertFieldByXPath('//tr[@class="odd"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/take-all"]', "Take-all", 'Take-all found');

    //checks for tan spot
    $this->assertFieldByXPath('//tr[@class="even"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/tan-spot"]', "Tan spot", 'Tan spot found');

   //checks for What streak mosaic virus
    $this->assertFieldByXPath('//tr[@class="odd views-row-last"]//td[@class="views-field views-field-title active views-align-center"]//a[@href="/disease/wheat-streak-mosaic-virus"]', "Wheat Streak Mosaic Virus ", 'Wheat Streak Mosaic Virus found');
  }
}

