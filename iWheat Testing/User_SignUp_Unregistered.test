<?php

/**
 * @file
 * Tests for the home page.
 */

/**
 * Tests menu links depending on user permissions.
 */
class User_SignUp_Unregistered_TestCase extends FirstRemoteTestCase {
  public static function getInfo() {
    return array(
      'name' => 'User Sign Up Unregistered Test',
      'description' => 'Tests User Register page when not logged in',
      'group' => 'iWheat',
    );
  }

  function setUp() {
    parent::setUp(array('node'));
  }

  /**
   * Test that the links are added to the page (no JS testing).
   */
  function testHomePageContent() {
    module_enable(array('contact'));
    $this->resetAll();
        
    // Test the user page when not logged in    
    $this->drupalGet('/user/register');
    
    // Test that the page title displays 'Home'
    $this->assertFieldByXPath('//h1[@id="page-title"]', 'Home', 'Home title found.');
    
    // Test that the Create Account, Log in, and Request password links exist
    $this->assertLink('Create new account', 0, 'Create Account link found', 'Other');
    $this->assertLink('Login', 0, 'Login link found', 'Other');
    $this->assertLink('Request new password', 0, 'New password link found', 'Other');
    
    // Test that the Username block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-name"]', 'Username ', 'Username text found');
    $this->assertFieldByXPath('//label[@for="edit-name"]//span[@class="form-required"]', '*', 'Username asterisk text found');
    $this->assertFieldByXPath('//div[@class="description"]', 'Spaces are allowed; punctuation is not allowed except for periods, hyphens, apostrophes, and underscores.', 'Username description text found');
    $this->assertFieldByXPath('//input[@id="edit-name"]', '', 'Username input box found');
    
    // Test that the Password block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-mail"]', 'E-mail address ', 'E-mail address text found');
    $this->assertFieldByXPath('//label[@for="edit-mail"]//span[@class="form-required"]', '*', 'E-mail address asterisk text found');
    $this->assertFieldByXPath('//div[@class="description"]', 'A valid e-mail address. All e-mails from the system will be sent to this address. The e-mail address is not made public and will only be used if you wish to receive a new password or wish to receive certain news or notifications by e-mail.', 'E-mail address description text found');
    $this->assertFieldByXPath('//input[@id="edit-mail"]', '', 'E-mail address input box found');
    
    // Test that the first name block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-field-user-first-und-0-value"]', 'First Name ', 'First Name text found');
    $this->assertFieldByXPath('//input[@id="edit-field-user-first-und-0-value"]', '', 'First name input box found');
    
    // Test that the last name block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-field-user-last-und-0-value"]', 'Last Name ', 'Last Name text found');
    $this->assertFieldByXPath('//input[@id="edit-field-user-last-und-0-value"]', '', 'Last name input box found');
    
    // Test that the Username block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-field-user-affiliation-und-0-value"]', 'Affiliation ', 'Affiliation text found');
    $this->assertFieldByXPath('//label[@for="edit-field-user-affiliation-und-0-value"]//span[@class="form-required"]', '*', 'Affiliation asterisk text found');
    $this->assertFieldByXPath('//div[@class="description"]', 'university name, organization name, consultant name, self ....', 'Affliation description text found');
    $this->assertFieldByXPath('//input[@id="edit-field-user-affiliation-und-0-value"]', '', 'Affliation input box found');
    
    // Test that the Extension block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-field-user-extension-und"]', 'Extension agent/educator ', 'Extension agent/educator text found');
    $this->assertFieldByXPath('//input[@id="edit-field-user-extension-und-none"]', '', 'N/A button checkbox found');
    $this->assertFieldByXPath('//label[@for="edit-field-user-extension-und-none"]', 'N/A ', 'N/A text found');
    $this->assertFieldByXPath('//input[@id="edit-field-user-extension-und-yes"]', '', 'Yes button checkbox found');
    $this->assertFieldByXPath('//label[@for="edit-field-user-extension-und-yes"]', 'Yes ', 'Yes text found');
    $this->assertFieldByXPath('//input[@id="edit-field-user-extension-und-no"]', '', 'No button checkbox found');
    $this->assertFieldByXPath('//label[@for="edit-field-user-extension-und-no"]', 'No ', 'No text found');
    
    // Test that the County block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-field-user-county-und-0-value"]', 'County ', 'County text found');
    $this->assertFieldByXPath('//label[@for="edit-field-user-county-und-0-value"]//span[@class="form-required"]', '*', 'County asterisk text found');
    $this->assertFieldByXPath('//input[@id="edit-field-user-county-und-0-value"]', '', 'County input box found');
    
    // Test that the State block of code exists and displays correctly
    $this->assertFieldByXPath('//label[@for="edit-field-user-state-und"]', 'State ', 'State text found');
    $this->assertFieldByXPath('//label[@for="edit-field-user-state-und"]//span[@class="form-required"]', '*', 'State asterisk text found');
    $this->assertElementByXPath('//select[@id="edit-field-user-state-und"]', array(), 'State dropdown box found');
    
    // Test that the Locale block of code exists and displays correctly
    $this->assertFieldByXPath('//div[@class="fieldset-description"]', 'Your time zone setting will be automatically detected if possible. Confirm the selection and click save.', 'Locale description found');
    $this->assertFieldByXPath('//label[@for="edit-timezone--2"]', 'Time zone ', 'Time zone text found');
    $this->assertElementByXPath('//select[@id="edit-timezone--2"]', array(), 'Time zone dropdown box found');
    $this->assertFieldByXPath('//div[@class="description"]', 'Select the desired local time and time zone. Dates and times throughout this site will be displayed using this time zone.', 'Time zone description text found');
    
    // Test that the Captcha block of code exists and displays correctly
    $this->assertFieldByXPath('//span[@class="fieldset-legend"]', 'CAPTCHA', 'Captcha title found');
    $this->assertFieldByXPath('//div[@class="fieldset-description"]', 'This question is for testing whether you are a human visitor and to prevent automated spam submissions.', 'Captcha description text found');
    $this->assertFieldByXPath('//img[@title="Image CAPTCHA"]', '', 'Captcha img found');
    
    $this->assertFieldByXPath('//label[@for="edit-captcha-response"]', 'What code is in the image? ', 'Captcha input text found');
    $this->assertFieldByXPath('//label[@for="edit-captcha-response"]//span[@class="form-required"]', '*', 'Captcha input asterisk text found');
    $this->assertFieldByXPath('//div[@class="description"]', 'Enter the characters shown in the image.', 'Captcha input description text found');
    $this->assertFieldByXPath('//input[@id="edit-captcha-response"]', '', 'Captcha input input box found');
    
    
    // Test that the Login button
    $this->assertFieldByXPath('//input[@value="Create new account"]', '', 'Create new account button found.');

  }
}
