<?php

/**
 * @file
 * Tests for the blocks on home page.
 */

/**
 * Tests menu links depending on user permissions.
 */
class Home_Overlay_Unregistered_TestCase extends FirstRemoteTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Home Page Overlay Unregistered Test',
      'description' => 'Tests Home page overlay when not logged in',
      'group' => 'iWheat',
    );
  }

  function setUp() {
    parent::setUp(array('node'));
  }

  /**
   * Test that the links are added to the page (no JS testing).
   */
  function testAnonymousMenus() {
    module_enable(array('contact'));
    $this->resetAll();

    // Check section header and home page link to ensure they are correct
    $this->drupalGet('');
    
    $this->checkHomeAndTopMenu();
    
    $this->checkMainMenu();
    
    $this->checkSideMenu();
    
    $this->checkSideLogonBlock();
    
    $this->checkSideHelpBlock();
  }
  
  /**
   * @todo
   * Note to daniel et al
   *
   * On the testing UI page at admin/config/development/testing, the list of
   * test classes that can be selected is compiled from classes that extend
   * DrupalTestCase (or one of its descendant classes) and have a getInfo()
   * method. For your work, any class that extends FirstRemoteTestCase will be
   * in the list.
   *
   * For each selected test class, simpletest will automatically invoke each
   * public method in that class whose name begins with 'test'. Thus, use that
   * prefix accordingly. Names of helper methods should not begin with 'test'.
   *
   * A 'return' statement is unnecessary to end each method; it is implied.
   *
   * Do not wrap the message string with the t() function. This practice has
   * been deprecated.
   */
  function checkHomeAndTopMenu() {
  
    //Check that the header section exists
    $this->assertElementByXPath('//header[@id="section-header"]', array(), 'Section Header found.');
    
    //Check that the home image exists
    $this->assertElementByXPath('//div[@class="logo-img"]//a[@rel="home"]//img[@id="logo"]', array(), 'Home page logo found.');
    
    //Check that the top menu section exists
    $this->assertElementByXPath('//div[@id="block-system-user-menu"]//div[@class="block-inner clearfix"]//div[@class="content clearfix"]//ul[@class="menu"]', array(), 'Top Menu found.');
    
    // Check the Login menu item in the top left to ensure it is correct
    $this->assertFieldByXPath('//ul[@class="menu"]//li[@class="first leaf"]//a[@href="/user/login"]', 'Login', 'Menu: Login display correct.');
    
    // Check the Create Account menu item in the top left to ensure it is correct
    $this->assertFieldByXPath('//ul[@class="menu"]//li[@class="leaf"]//a[@href="/user/register"]', 'Create Account', 'Menu: Create Account display correct.');
    
    // Check the Reset Password menu item in the top left to ensure it is correct
    $this->assertFieldByXPath('//ul[@class="menu"]//li[@class="last leaf"]//a[@href="/user/password"]', 'Reset Password', 'Menu: Reset Password display correct.');
  }
  
  /**
   * @todo
   * The xpath strings are too specific to the html in that the selector
   * includes all of the class names including the menu link ID, e.g.,
   * menu-mlid-1120. These IDs may not match across all instances of the site
   * (e.g., dev, test, and live). Sometimes you want the selector to be this
   * specific, but for most of what we need to do the basic html tag structure
   * is sufficient.
   *
   * Also, an assert on the element and the field is redundant on the element.
   * It should suffice to check the field which validates the link and the text.
   */
  function checkMainMenu() {
  
    //Check that the main menu exists
    $this->assertElementByXPath('//div[@class="menu-block-wrapper menu-block-1 menu-name-menu-tabs parent-mlid-3673 menu-level-1"]//ul[@id="main-menu-2"]', array(), 'Main Menu found.');
  
    // Check the Resources main menu item in the section header to ensure it is correct
    $this->assertFieldByXPath('//ul[@id="main-menu-2"]//li//a[@href="/project/resources"]', 'Resources', 'Main Menu: Resources display correct.');
    
    // Check the Diagnostic Key main menu item in the section header to ensure it is correct
    $this->assertFieldByXPath('//ul[@id="main-menu-2"]//li//a[@href="/pests"]', 'Diagnostic key', 'Main Menu: Diagnostic key display correct.');
    
    // Check the Variety Support System main menu item in the section header to ensure it is correct
    $this->assertFieldByXPath('//ul[@id="main-menu-2"]//li//a[@href="/toolshed/selector"]', 'Variety Support System', 'Main Menu: Variety Support System display correct.');
    
    // Check the Contact Us main menu item in the section header to ensure it is correct
    $this->assertFieldByXPath('//ul[@id="main-menu-2"]//li//a[@href="/project/contact"]', 'Contact Us', 'Main Menu: Contact Us display correct.');
  }
  
  function checkSideMenu() {
    //Check that the side menu exists
    $this->assertElementByXPath('//aside[@id="region-sidebar-second"]//div[@class="region-inner region-sidebar-second-inner"]', array(), 'Side Menu Region found.');
    
    //Check that the Toolshed element exists and appears correctly 
    $this->assertFieldByXPath('//div[@class="region-inner region-sidebar-second-inner"]//section[@id="block-system-navigation"]//div[@class="block-inner clearfix"]//h2[@class="block-title"]', 'My Tool Shed', 'Side Menu: Toolshed display correct.');
    
    $base_path = '//div[@class="region-inner region-sidebar-second-inner"]//section[@id="block-system-navigation"]//div[@class="block-inner clearfix"]//div[@class="content clearfix"]//ul[@class="menu"]';
    
    // Check that each element in the Toolshed appears correctly: Variety Support System
    $this->assertFieldByXPath($base_path . '//li//a[@href="/toolshed/selector"]', 'Variety Support System', 'Side Menu: Toolshed Variety Support System display correct.');
    
    // Check that each element in the Toolshed appears correctly: My Variety List
    $this->assertFieldByXPath($base_path . '//li//a[@href="/seedsavers"]', 'My Variety List', 'Side Menu: Toolshed My Variety List display correct.');
    
    // Check that each element in the Toolshed appears correctly: Diagnostic Key 
    $this->assertFieldByXPath($base_path . '//li//a[@href="/pests"]', 'Diagnostic Key', 'Side Menu: Toolshed Diagnostic Key display correct.');
    
    $base_path = '//div[@class="region-inner region-sidebar-second-inner"]//section[@id="block-block-14"]//div[@class="block-inner clearfix"]';
    
    //Check that the Login Paragraph block exists and appears correctly 
    $this->assertFieldByXPath($base_path . '//h2[@class="block-title"]', 'Login to see more tools!', 'Side Menu: Login Paragraph display correct.');
    
    //Check that the Login Paragraph text exists and appears correctly
    $this->assertFieldByXPath($base_path . '//div[@class="content clearfix"]//p', 'Want to see more tools? Create a free account and tell us a little about yourself. This helps us customize your experience on the site and saves you time finding what you need.', 'Side Menu: Login Paragraph text display correct.');
  }
  
  function checkSideLogonBlock() {
    //Check that the Login block exists and appears correctly 
    $this->assertFieldByXPath('//div[@class="region-inner region-sidebar-second-inner"]//section[@id="block-user-login"]//div[@class="block-inner clearfix"]//h2[@class="block-title"]', 'User login', 'Side Menu: Login display correct.');
    
    $base_path = '//div[@class="region-inner region-sidebar-second-inner"]//section[@id="block-user-login"]//div[@class="block-inner clearfix"]//div[@class="content clearfix"]//form[@id="user-login-form"]//div';
    
    //Check that the Login block elements exist and appear correctly
    // Test username block
    $this->assertFieldByXPath($base_path . '//div[@class="form-item form-type-textfield form-item-name"]//label[@for="edit-name"]', 'Username ', 'Side Menu: Login username display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="form-item form-type-textfield form-item-name"]//label[@for="edit-name"]//span[@class="form-required"]', '*', 'Side Menu: Login username required display correct.');
    $this->assertElementByXPath($base_path . '//div[@class="form-item form-type-textfield form-item-name"]//input[@id="edit-name"]', array(), 'Side Menu: Login username field found.');   
    
    // Test password block
    $this->assertFieldByXPath($base_path . '//div[@class="form-item form-type-password form-item-pass"]//label[@for="edit-pass"]', 'Password ', 'Side Menu: Login password label display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="form-item form-type-password form-item-pass"]//label[@for="edit-pass"]//span[@class="form-required"]', '*', 'Side Menu: Login password required display correct.');
    $this->assertElementByXPath($base_path . '//div[@class="form-item form-type-password form-item-pass"]//input[@id="edit-pass"]', array(), 'Side Menu: Login password field found.'); 
    
    // Test create new account link
    $this->assertFieldByXPath($base_path . '//div[@class="item-list"]//ul//li[@class="first"]//a[@href="/user/register"]', 'Create new account', 'Side Menu: Login Create new account display correct.');
    $this->assertElementByXPath($base_path . '//input[@name="form_build_id"]', array(), 'Side Menu: Login Create new account found.');  
    
    // Test request new password link
    $this->assertFieldByXPath($base_path . '//div[@class="item-list"]//ul//li[@class="last"]//a[@href="/user/password"]', 'Request new password', 'Side Menu: Login request new password display correct.');
    $this->assertElementByXPath($base_path . '//input[@name="form_id"]', array(), 'Side Menu: Login request new password found.'); 
    
    // Test login button
    $this->assertElementByXPath($base_path . '//div[@id="edit-actions"]//input[@id="edit-submit"]', array(), 'Side Menu: Login button found.');   
    $this->assertElementByXPath($base_path . '//div[@id="edit-actions"]//input[@value="Log in"]', array(), 'Side Menu: Login button display correct.');
  }
  
  function checkSideHelpBlock() {
    //Check that the Need Help? block exists and appears correctly  
    $this->assertFieldByXPath('//div[@class="region-inner region-sidebar-second-inner"]//section[@id="block-views-how-to-video-series-block"]//div[@class="block-inner clearfix"]//h2[@class="block-title"]', 'Need help?', 'Side Menu: Need Help? text display correct.');
    
    $base_path = '//div[@class="region-inner region-sidebar-second-inner"]//section[@id="block-views-how-to-video-series-block"]//div[@class="block-inner clearfix"]//div[@class="content clearfix"]//div//div[@class="view-content"]';
    
    //Check that the Need Help: Submitting a Pest Sample block exists and appears correctly
    $this->assertFieldByXPath($base_path . '//div[@class="views-row views-row-1 views-row-odd views-row-first"]//div[@class="views-field views-field-title"]//span[@class="field-content"]//a[@href="/submitting-pest-sample"]', 'Submitting a Pest Sample', 'Side Menu: Need Help: Submitting a Pest Sample text display correct.');
    
    //Check that the Need Help: Using the Diagnostic Key block exists and appears correctly
    $this->assertFieldByXPath($base_path . '//div[@class="views-row views-row-2 views-row-even"]//div[@class="views-field views-field-title"]//span[@class="field-content"]//a[@href="/using-diagnostic-key"]', 'Using the Diagnostic Key', 'Side Menu: Need Help: Using the Diagnostic Key text display correct.');
    
    //Check that the Need Help: Adding Wheat Fields block exists and appears correctly 
    $this->assertFieldByXPath($base_path . '//div[@class="views-row views-row-3 views-row-odd"]//div[@class="views-field views-field-title"]//span[@class="field-content"]//a[@href="/adding-wheat-fields"]', 'Adding Wheat Fields', 'Side Menu: Need Help: Adding Wheat Fields text display correct.');
    
    //Check that the Need Help: Creating an Account block exists and appears correctly  
    $this->assertFieldByXPath($base_path . '//div[@class="views-row views-row-4 views-row-even views-row-last"]//div[@class="views-field views-field-title"]//span[@class="field-content"]//a[@href="/creating-account"]', 'Creating an Account', 'Side Menu: Need Help: Creating an Account text display correct.');

  }
}
