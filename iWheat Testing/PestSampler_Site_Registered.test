 <?php

/**
 * @file
 * Tests for the blocks on home page.
 */

/**
 * Tests menu links depending on user permissions.
 */
class PestSampler_Site_Registered_TestCase extends FirstRemoteTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Pest Sampler Chose Site Registered Test',
      'description' => 'Tests site selection page of the Pest Sampler wizard when logged in',
      'group' => 'iWheat',
    );
  }

  function setUp() {
    parent::setUp(array('node'));
  }

  /**
   * Test that the links are added to the page (no JS testing).
   */
  function testSamplerSitesPage() {
    module_enable(array('contact'));
    $this->resetAll();
    
    if ($this->loggedInUser) {
      $this->drupalLogout();
    }

    $edit = array(
      'name' => '',
      'pass' => ''
    );
    
    $this->drupalPost('user', $edit, 'Log in');

    // If a "log out" link appears on the page, it is almost certainly because
    // the login was successful.
    $pass = $this->assertLink('Log Out', 0, 'User successfully logged in.', 'Other');

    // Check section header and home page link to ensure they are correct
    $this->drupalGet('http://dev.iwheat.org/pest_sampler/nojs/greenbug/site');
    
    $this->checkPageSites();
  }
  
  function setUpSampler()
  {
    $edit = array('field_samples_method[und]' => t('5114'));
    $this->drupalPost(NULL, $edit, t('Continue'));
    $this->assertElementByXPath('//div[@id="edit-field-samples-location"]', array(), 'The map was displayed after first page');
    
    $edit = array('field_samples_location[und][0][geom]' => 'POINT (-96.5716 39.1836)');
    $this->drupalPost(NULL, $edit, t('Continue'));
    $this->assertText('Add field site');
  }

  function checkPageSites() {
  
    $base_path = '//div[@id="block-system-main"]//div[@class="block-inner clearfix"]//div[@class="content clearfix"]//div[@id="wizard-form-wrapper"]//form[@id="pest-sampler-wizard-step-form"]//div';
  
    //Check that the wizard "trail" section displays correctly
    $this->assertFieldByXPath($base_path . '//div[@class="wizard-trail"]//span', 'Method', 'Wizard Trail 1st Step display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="wizard-trail"]//span', 'Location', 'Wizard Trail 2nd Step display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="wizard-trail"]//span', 'Site', 'Wizard Trail 3rd Step display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="wizard-trail"]//span', 'Costs', 'Wizard Trail 4th Step display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="wizard-trail"]//span', 'Samples', 'Wizard Trail 5th Step display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="wizard-trail"]//span', 'Notes', 'Wizard Trail 6th Step display correct.');
    $this->assertFieldByXPath($base_path . '//div[@class="wizard-trail"]//span', 'Finish', 'Wizard Trail 7th Step display correct.');
    
    $base_path = $base_path . '//fieldset[@id="edit-step"]//div[@class="fieldset-wrapper"]';
    
     // Check that the add field site check box is checked or not. 
    $this->assertElementByXPath($base_path . '//div//input[@id="add-site-enabled"]', array(), 'Add field site check box found');
    $this->assertFieldByXPath($base_path . '//div//label[@for="add-site-enabled"]', 'Add field site ', 'Add field site text found');
    
    //Check that Create a field site option displays correctly
    $this->assertFieldByXPath($base_path . '//div//fieldset[@class="fieldset-wrapper"]', 'Create a field site using the location entered on previous step.', 'Create a field site text found');
    
    $this->assertFieldByXPath($base_path . '//div//label[@for="edit-step-add-options-title"]', 'Field Site Name ', 'Field site name text found');
    $this->assertFieldByXPath($base_path . '//div//input[@id="edit-step-add-options-title"]', '', 'Field site name text box found');
    $this->assertElementByXPath($base_path . '//div//input[@id="edit-step-add-options-create"]', array(), 'Field site name create button found');
    
    //Check that Field site drop down displays correctly
    $this->assertFieldByXPath($base_path . '//div//label[@for="edit-field-samples-field-site-und"]', 'Field Site ', 'Field site text found');
    $this->assertElementByXPath($base_path . '//div//select[@id="edit-field-samples-field-site-und"]', array(), 'Field site drop down found');
    
    $base_path = '//div[@id="block-system-main"]//div[@class="block-inner clearfix"]//div[@class="content clearfix"]//div[@id="wizard-form-wrapper"]//form[@id="pest-sampler-wizard-step-form"]//div';
    
    //Check that the Continue and Cancel buttons appear
    $this->assertElementByXPath($base_path . '//div//input[@id="edit-buttons-next"]', array(), 'Continue button displays correctly.');
    $this->assertElementByXPath($base_path . '//div//input[@id="edit-buttons-cancel"]', array(), 'Cancel button displays correctly.');
    
    // Select the Continue button and verify that the Location page appears
    $edit = array('field_samples_method[und]' => t('12212'));
    $this->drupalPost(NULL, $edit, t('Continue'));
    $this->assertFieldByXPath('//label[@for="edit-step-control-cost"]', 'Control Cost ', 'Control Cost was displayed after clicking Continue.');
    
    // Return to the Location page
    $edit = array();
    $this->drupalPost(NULL, $edit, t('Back'));
    $this->assertFieldByXPath($base_path . '//div//input[@id="show-method-enabled"]', 'Show method description ', 'Show Method Description checkbox displayed after clicking Back.');
    
    // Click the Cancel button and check that you are redirected to the home page.
    $edit = array('field_samples_method[und]' => t('12212'));
    $this->drupalPost(NULL, $edit, t('Cancel'));
    $this->assertFieldByXPath('//h1[@id="page-title"]', 'Welcome to iWheat.org!', 'Home page title was displayed after clicking Cancel.');
    
    }
}

    
    
